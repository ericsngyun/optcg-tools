generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [uuid_ossp(map: "uuid-ossp", schema: "extensions")]
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Card {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  card_id    String?
  set        String?    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rarity     String?    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  category   String?    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  effect     String?
  power      Int?       @db.SmallInt
  counter    Int?       @db.SmallInt
  color      String?    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cost       Int?       @db.SmallInt
  trigger    String?
  life       Int?       @db.SmallInt
  is_alt_art String?
  type       String?    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  attribute  String?    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  image      String?    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  Attribute  Attribute? @relation(fields: [attribute], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Category   Category?  @relation(fields: [category], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cards_category_fkey")
  Color      Color?     @relation(fields: [color], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Image      Image?     @relation(fields: [image], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cards_image_fkey")
  Rarity     Rarity?    @relation(fields: [rarity], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cards_rarity_fkey")
  Set        Set?       @relation(fields: [set], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cards_set_fkey")
  Type       Type?      @relation(fields: [type], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Category {
  id            String @id(map: "categories_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  category_name String
  Card          Card[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Image {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  image_url  String
  image_name String?
  Card       Card[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Rarity {
  id          String @id(map: "rarities_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rarity_name String
  Card        Card[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Set {
  id       String @id(map: "sets_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  set_name String
  Card     Card[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Attribute {
  id             String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  attribute_name String
  Card           Card[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Color {
  id         String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  color_name String
  Card       Card[]
}

model Type {
  id        String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type_name String
  Card      Card[]
}
